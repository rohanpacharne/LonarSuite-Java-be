saveLtExpModuleApprovals = INSERT INTO LT_MAST_MODULE_APPROVALS \
(MODULE,APPROVAL_LEVEL,APPROVAL_ROLE_CODE,APPROVAL_ROLE_NAME, \
APPROVED_BY_ANYONE,DIVISION_ID,CREATED_BY,CREATION_DATE,START_DATE,END_DATE, \
LAST_UPDATE_DATE,LAST_UPDATE_LOGIN,LAST_UPDATED_BY,REQUIRED_LEVEL,STATUS,ISDELETE  ) \
VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

deleteLtExpModuleApprovals = DELETE FROM LT_MAST_MODULE_APPROVALS WHERE MODULE_APPROVAL_ID = ?

getByApprovalLevelAndModuleId = SELECT * FROM LT_MAST_MODULE_APPROVALS d \
where d.APPROVAL_LEVEL = ? AND d.MODULE_APPROVAL_ID=?

getByExpenseHeaderId = SELECT * FROM LT_MAST_MODULE_APPROVALS d WHERE d.DIVISION_ID = ?

#getBymoduleApprovalId1 = SELECT b.MODULE_APPROVAL_ID,b.MODULE,b.APPROVAL_LEVEL,b.APPROVAL_ROLE_CODE, \
#b.APPROVAL_ROLE_NAME,b.APPROVED_BY_ANYONE,b.DIVISION_ID,b.REQUIRED_LEVEL,b.STATUS, b.ISDELETE,b.CREATED_BY, \
#b.CREATION_DATE,b.START_DATE,b.END_DATE,b.LAST_UPDATE_DATE ,cmvs.value_name as status_value,md.DIVISION_NAME  \
#FROM  LT_MAST_MODULE_APPROVALS b ,LT_MAST_COMN_MASTER_VALUES cmvs  ,LT_MAST_DIVISIONS md  \
#WHERE MODULE_APPROVAL_ID = ?  \
#AND md.DIVISION_ID(+) = b.DIVISION_ID  AND (cmvs.value_code(+) = b.STATUS  \
#AND cmvs.master_id = (select master_id from lt_mast_comn_master where master_name  = 'APPROVAL_MODULE_STATUS' ))

getBymoduleApprovalId1 = SELECT b.MODULE_APPROVAL_ID, b.MODULE, b.APPROVAL_LEVEL, b.APPROVAL_ROLE_CODE, \
b.APPROVAL_ROLE_NAME, b.APPROVED_BY_ANYONE, b.DIVISION_ID, b.REQUIRED_LEVEL, b.STATUS, b.ISDELETE, b.CREATED_BY, \
b.CREATION_DATE, b.START_DATE, b.END_DATE, b.LAST_UPDATE_DATE, cmvs.value_name AS status_value, md.DIVISION_NAME \
FROM LT_MAST_MODULE_APPROVALS b \
LEFT JOIN LT_MAST_COMN_MASTER_VALUES cmvs ON cmvs.value_code = b.STATUS \
AND cmvs.master_id = (SELECT master_id FROM lt_mast_comn_master WHERE master_name = 'APPROVAL_MODULE_STATUS') \
LEFT JOIN LT_MAST_DIVISIONS md ON md.DIVISION_ID = b.DIVISION_ID \
WHERE b.MODULE_APPROVAL_ID = ? 

updateLtExpModuleApprovals  = UPDATE LT_MAST_MODULE_APPROVALS SET \
MODULE=?, APPROVAL_LEVEL=?, APPROVAL_ROLE_CODE=? ,APPROVAL_ROLE_NAME=?, \
APPROVED_BY_ANYONE=?, DIVISION_ID=?, START_DATE=?, END_DATE=?, \
LAST_UPDATE_DATE=?, LAST_UPDATE_LOGIN=?, LAST_UPDATED_BY=?, REQUIRED_LEVEL=?, \
STATUS=?,  ISDELETE=? \
WHERE MODULE_APPROVAL_ID=?


#getModuleApproval = select * from  (SELECT a.*,ROWNUM RNUM from \
#( select  ma.MODULE_APPROVAL_ID AS MODULE_APPROVAL_ID, cvm.value_name AS MODULE ,ma.LAST_UPDATE_DATE AS LAST_UPDATE_DATE, \
#ma.APPROVAL_LEVEL AS APPROVAL_LEVEL, ma.APPROVAL_ROLE_CODE AS APPROVAL_ROLE_CODE, ma.APPROVAL_ROLE_NAME AS APPROVAL_ROLE_NAME, \
#ma.APPROVED_BY_ANYONE AS APPROVED_BY_ANYONE, ma.DIVISION_ID AS DIVISION_ID, ma.START_DATE AS START_DATE, ma.END_DATE AS END_DATE,  \
#cv.value_name as STATUS, ma.REQUIRED_LEVEL AS REQUIRED_LEVEL, \
#(d.Division_Name||' ' ||'('||d.Division_Code||')') AS Division_Name \
#from lt_mast_module_approvals ma, lt_mast_divisions d ,lt_mast_comn_master_values cv, lt_mast_comn_master_values cvm  \
#where  ma.division_id=d.division_id(+)  \
#AND ( cv.VALUE_CODE(+)=ma.status AND cv.MASTER_ID = (select master_id from lt_mast_comn_master where master_name='APPROVAL_MODULE_STATUS') )  \
#AND ( cvm.VALUE_CODE(+)=ma.module  \
#AND cvm.master_id=(select master_id from lt_mast_comn_master where master_name='APPROVER_MODULE') ) \
#AND ma.COMPANY_ID = ? \
#AND upper(ma.STATUS) LIKE  nvl(?, upper(ma.STATUS))  \
#AND upper(ma.MODULE) like COALESCE( ?, upper(ma.MODULE) )  \
#AND upper(ma.APPROVAL_ROLE_NAME) like COALESCE( ?, upper(ma.APPROVAL_ROLE_NAME))  \
#AND upper(ma.APPROVAL_ROLE_CODE) like COALESCE( ?, upper(ma.APPROVAL_ROLE_CODE))  \
#AND ma.APPROVAL_LEVEL LIKE COALESCE( ?, ma.APPROVAL_LEVEL)  \
#AND  TO_CHAR( COALESCE(ma.START_DATE, sysdate() ),'DD-MM-YYYY') \
#LIKE COALESCE(?, TO_CHAR( COALESCE(ma.START_DATE, sysdate()),'DD-MM-YYYY'))  \
#AND  TO_CHAR( COALESCE(ma.END_DATE, sysdate() ),'DD-MM-YYYY')  \
#LIKE COALESCE(?, TO_CHAR( COALESCE(ma.END_DATE, sysdate()),'DD-MM-YYYY'))  \
#AND  UPPER(( d.Division_Name|| '(' ||d.Division_Code ||')') )  \
#LIKE UPPER(COALESCE( ?, upper(d.Division_Name|| '('||d.Division_Code||')' ))) \
#order by  \
#CASE WHEN 2 = ? then  upper(ma.MODULE) END asc , \
#CASE WHEN 12 = ? then upper(ma.MODULE) END desc , \
#CASE WHEN 4 = ? then upper(ma.STATUS) END asc ,\
#CASE WHEN 14 = ? then upper(ma.STATUS) END desc , \
#CASE WHEN 3 = ? then upper(Division_Name) END asc , \
#CASE WHEN 13 = ? then upper(Division_Name) END desc,  \
#CASE WHEN 5 = ? then ma.APPROVAL_ROLE_CODE END desc ,  \
#CASE WHEN 15 = ? then ma.APPROVAL_ROLE_CODE END asc , \
#CASE WHEN 6 = ? then ma.APPROVAL_ROLE_NAME END desc ,  \
#CASE WHEN 16 = ? then ma.APPROVAL_ROLE_NAME END asc , \
#CASE WHEN 7 = ? then ma.APPROVAL_LEVEL END desc , \
#CASE WHEN 17 = ? then ma.APPROVAL_LEVEL END asc ,  \
#CASE WHEN 8 = ? then ma.START_DATE END desc ,  \
#CASE WHEN 18 = ? then ma.START_DATE END asc , \
#CASE WHEN 9 = ? then ma.END_DATE END desc , \
#CASE WHEN 19 = ? then ma.END_DATE END asc,  \
#CASE WHEN 1 = ? then ma.LAST_UPDATE_DATE END desc ,\
#CASE WHEN 20 = ? then ma.LAST_UPDATE_DATE END asc )a  where ROWNUM <=? )  WHERE RNUM >=?

getModuleApproval = SELECT * FROM \
(SELECT a.*, @rownum := @rownum + 1 AS RNUM FROM ( \
    SELECT ma.MODULE_APPROVAL_ID AS MODULE_APPROVAL_ID, cvm.value_name AS MODULE, ma.LAST_UPDATE_DATE AS LAST_UPDATE_DATE, \
    ma.APPROVAL_LEVEL AS APPROVAL_LEVEL, ma.APPROVAL_ROLE_CODE AS APPROVAL_ROLE_CODE, ma.APPROVAL_ROLE_NAME AS APPROVAL_ROLE_NAME, \
    ma.APPROVED_BY_ANYONE AS APPROVED_BY_ANYONE, ma.DIVISION_ID AS DIVISION_ID, ma.START_DATE AS START_DATE, ma.END_DATE AS END_DATE, \
    cv.value_name AS STATUS, ma.REQUIRED_LEVEL AS REQUIRED_LEVEL, \
    CONCAT(d.Division_Name, ' (', d.Division_Code, ')') AS Division_Name \
    FROM lt_mast_module_approvals ma \
    LEFT JOIN lt_mast_divisions d ON ma.division_id = d.division_id \
    LEFT JOIN lt_mast_comn_master_values cv ON cv.VALUE_CODE = ma.status \
    AND cv.MASTER_ID = (SELECT master_id FROM lt_mast_comn_master WHERE master_name = 'STATUS_MASTER') \
    LEFT JOIN lt_mast_comn_master_values cvm ON cvm.VALUE_CODE = ma.module \
    AND cvm.master_id = (SELECT master_id FROM lt_mast_comn_master WHERE master_name = 'APPROVER_MODULE') \
    WHERE ma.COMPANY_ID = ? \
    AND UPPER(ma.STATUS) LIKE COALESCE(?, UPPER(ma.STATUS)) \
    AND UPPER(ma.MODULE) LIKE COALESCE(?, UPPER(ma.MODULE)) \
    AND UPPER(ma.APPROVAL_ROLE_NAME) LIKE COALESCE(?, UPPER(ma.APPROVAL_ROLE_NAME)) \
    AND UPPER(ma.APPROVAL_ROLE_CODE) LIKE COALESCE(?, UPPER(ma.APPROVAL_ROLE_CODE)) \
    AND ma.APPROVAL_LEVEL LIKE COALESCE(?, ma.APPROVAL_LEVEL) \
    AND DATE_FORMAT(COALESCE(ma.START_DATE, sysdate()), '%d-%m-%Y') LIKE COALESCE(?, DATE_FORMAT(COALESCE(ma.START_DATE, sysdate()), '%d-%m-%Y')) \
    AND DATE_FORMAT(COALESCE(ma.END_DATE, sysdate()), '%d-%m-%Y') LIKE COALESCE(?, DATE_FORMAT(COALESCE(ma.END_DATE, sysdate()), '%d-%m-%Y')) \
    AND UPPER(CONCAT(d.Division_Name, '(', d.Division_Code, ')')) LIKE UPPER(COALESCE(?, UPPER(CONCAT(d.Division_Name, '(', d.Division_Code, ')')))) \
    ORDER BY ma.module,d.division_name,ma.APPROVAL_ROLE_CODE, \
    CASE WHEN 2 = ? THEN UPPER(ma.MODULE) END ASC, \
    CASE WHEN 12 = ? THEN UPPER(ma.MODULE) END DESC, \
    CASE WHEN 4 = ? THEN UPPER(ma.STATUS) END ASC, \
    CASE WHEN 14 = ? THEN UPPER(ma.STATUS) END DESC, \
    CASE WHEN 3 = ? THEN UPPER(Division_Name) END ASC, \
    CASE WHEN 13 = ? THEN UPPER(Division_Name) END DESC, \
    CASE WHEN 5 = ? THEN ma.APPROVAL_ROLE_CODE END DESC, \
    CASE WHEN 15 = ? THEN ma.APPROVAL_ROLE_CODE END ASC, \
    CASE WHEN 6 = ? THEN ma.APPROVAL_ROLE_NAME END DESC, \
    CASE WHEN 16 = ? THEN ma.APPROVAL_ROLE_NAME END ASC, \
    CASE WHEN 7 = ? THEN ma.APPROVAL_LEVEL END DESC, \
    CASE WHEN 17 = ? THEN ma.APPROVAL_LEVEL END ASC, \
    CASE WHEN 8 = ? THEN ma.START_DATE END DESC, \
    CASE WHEN 18 = ? THEN ma.START_DATE END ASC, \
    CASE WHEN 9 = ? THEN ma.END_DATE END DESC, \
    CASE WHEN 19 = ? THEN ma.END_DATE END ASC, \
    CASE WHEN 1 = ? THEN ma.LAST_UPDATE_DATE END DESC, \
    CASE WHEN 20 = ? THEN ma.LAST_UPDATE_DATE END ASC \
) a, (SELECT @rownum := 0) r \
) b \
WHERE RNUM <= ? AND RNUM >= ?

# getCountOfModuleApprovals = select COUNT(ma.MODULE_APPROVAL_ID) as id \
# from lt_mast_module_approvals ma, lt_mast_divisions d ,lt_mast_comn_master_values cv, lt_mast_comn_master_values cvm  \
#where  ma.division_id=d.division_id(+)  \
#AND ( cv.VALUE_CODE(+)=ma.status AND cv.MASTER_ID = (select master_id from lt_mast_comn_master where master_name='APPROVAL_MODULE_STATUS') )  \
#AND ( cvm.VALUE_CODE(+)=ma.module  \
#AND cvm.master_id=(select master_id from lt_mast_comn_master where master_name='APPROVER_MODULE') ) \
#AND ma.COMPANY_ID = ? \
#AND upper(ma.STATUS) LIKE  nvl(?, upper(ma.STATUS))  \
#AND upper(ma.MODULE) like COALESCE( ?, upper(ma.MODULE) )  \
#AND upper(ma.APPROVAL_ROLE_NAME) like COALESCE( ?, upper(ma.APPROVAL_ROLE_NAME))  \
#AND upper(ma.APPROVAL_ROLE_CODE) like COALESCE( ?, upper(ma.APPROVAL_ROLE_CODE))  \
#AND ma.APPROVAL_LEVEL LIKE COALESCE( ?, ma.APPROVAL_LEVEL)  \
#AND  TO_CHAR( COALESCE(ma.START_DATE, sysdate() ),'DD-MM-YYYY') \
#LIKE COALESCE(?, TO_CHAR( COALESCE(ma.START_DATE, sysdate()),'DD-MM-YYYY'))  \
#AND  TO_CHAR( COALESCE(ma.END_DATE, sysdate() ),'DD-MM-YYYY')  \
#LIKE COALESCE(?, TO_CHAR( COALESCE(ma.END_DATE, sysdate()),'DD-MM-YYYY'))  \
#AND  UPPER(( d.Division_Name|| '(' ||d.Division_Code ||')') )  \
#LIKE UPPER(COALESCE( ?, upper(d.Division_Name|| '('||d.Division_Code||')' )))

getCountOfModuleApprovals = SELECT COUNT(ma.MODULE_APPROVAL_ID) as id \
FROM lt_mast_module_approvals ma \
LEFT JOIN lt_mast_divisions d ON ma.division_id = d.division_id \
LEFT JOIN lt_mast_comn_master_values cv ON cv.VALUE_CODE = ma.status \
AND cv.MASTER_ID = (SELECT master_id FROM lt_mast_comn_master WHERE master_name = 'APPROVAL_MODULE_STATUS') \
LEFT JOIN lt_mast_comn_master_values cvm ON cvm.VALUE_CODE = ma.module \
AND cvm.master_id = (SELECT master_id FROM lt_mast_comn_master WHERE master_name = 'APPROVER_MODULE') \
WHERE ma.COMPANY_ID = ? \
AND UPPER(ma.STATUS) LIKE COALESCE(?, UPPER(ma.STATUS)) \
AND UPPER(ma.MODULE) LIKE COALESCE(?, UPPER(ma.MODULE)) \
AND UPPER(ma.APPROVAL_ROLE_NAME) LIKE COALESCE(?, UPPER(ma.APPROVAL_ROLE_NAME)) \
AND UPPER(ma.APPROVAL_ROLE_CODE) LIKE COALESCE(?, UPPER(ma.APPROVAL_ROLE_CODE)) \
AND ma.APPROVAL_LEVEL LIKE COALESCE(?, ma.APPROVAL_LEVEL) \
AND DATE_FORMAT(COALESCE(ma.START_DATE, sysdate()), '%d-%m-%Y') LIKE COALESCE(?, DATE_FORMAT(COALESCE(ma.START_DATE, sysdate()), '%d-%m-%Y')) \
AND DATE_FORMAT(COALESCE(ma.END_DATE, sysdate()), '%d-%m-%Y') LIKE COALESCE(?, DATE_FORMAT(COALESCE(ma.END_DATE, sysdate()), '%d-%m-%Y')) \
AND UPPER(CONCAT(d.Division_Name, '(', d.Division_Code, ')')) LIKE UPPER(COALESCE(?, UPPER(CONCAT(d.Division_Name, '(', d.Division_Code, ')'))));


checkForDuplicate = SELECT * FROM  LT_MAST_MODULE_APPROVALS b \
WHERE b.MODULE = ? AND b.APPROVAL_LEVEL=? \
AND b.APPROVAL_ROLE_CODE=? AND b.DIVISION_ID=? AND b.STATUS = ?

getByLevelAndHeaderId = SELECT * FROM  LT_MAST_MODULE_APPROVALS b \
WHERE  b.APPROVAL_LEVEL=? \
AND b.MODULE_APPROVAL_ID=?

chkIsAprovedByAnyOne = SELECT * FROM  LT_MAST_MODULE_APPROVALS b \
WHERE b.MODULE_APPROVAL_ID = ( SELECT MODULE_APPROVAL_ID \
FROM lt_expense_approval WHERE EXPENSE_APPROVAL_ID  = ? )

getExpenseApprovalLevel = SELECT MODULE_APPROVAL_ID,MODULE,APPROVAL_ROLE_CODE,APPROVAL_ROLE_NAME, \
APPROVED_BY_ANYONE,APPROVAL_LEVEL,REQUIRED_LEVEL,ISDELETE \
FROM  LT_MAST_MODULE_APPROVALS b \
WHERE  b.DIVISION_ID = ( SELECT Division_id FROM lt_exp_expense_headers e WHERE e.Exp_Header_id = ?) \
and MODULE = (select EXPENSE_CATEGORY from lt_exp_expense_headers eh WHERE eh.Exp_Header_id = ?) \
order by APPROVAL_LEVEL asc

saveEmployee = INSERT INTO LT_MAST_MODULE_APP_EMP  \
(MODULE_APPROVAL_ID,EMPLOYEES_ID,START_DATE,END_DATE, CREATED_BY, CREATION_DATE, \
LAST_UPDATE_LOGIN,LAST_UPDATED_BY,APPROVAL_ROLE_ID,LAST_UPDATE_DATE ) \
VALUES(?,?,?,?,?,?,?,?,?,?)

updateEmployee =  UPDATE LT_MAST_MODULE_APP_EMP SET \
MODULE_APPROVAL_ID=?,EMPLOYEES_ID=?,START_DATE=?,END_DATE=?,  \
LAST_UPDATE_LOGIN=?,LAST_UPDATED_BY=?,APPROVAL_ROLE_ID=?,LAST_UPDATE_DATE=? \
WHERE MODULE_APP_EMPLOYEES_ID=? 

deleteByModuleApprovalId = DELETE FROM LT_MAST_MODULE_APP_EMP WHERE MODULE_APPROVAL_ID = ?

#getModuleAppEmployeesByModuleApprovalId = SELECT l.MODULE_APP_EMPLOYEES_ID,l.MODULE_APPROVAL_ID,  \
#l.EMPLOYEES_ID,l.START_DATE,l.END_DATE,l.APPROVAL_ROLE_ID ,  \
#( cmv.VALUE_NAME||' '|| em.FIRST_NAME|| ' '||em.LAST_NAME||' '||'('|| em.EMPLOYEE_NUMBER|| ')' ) as employee_name \
#FROM LT_MAST_MODULE_APP_EMP l , \
#lt_mast_employees em,  \
#LT_MAST_COMN_MASTER_VALUES cmv  , LT_MAST_COMN_MASTER cm  \
#WHERE l.MODULE_APPROVAL_ID = ?  \
#and em.EMPLOYEE_ID(+) = l.EMPLOYEES_ID  \
#and em.TITLE = cmv.value_code(+) AND cmv.MASTER_ID(+) = cm.MASTER_ID  \
#AND cm.MASTER_NAME = 'TITLE_MASTER'

getModuleAppEmployeesByModuleApprovalId = SELECT l.MODULE_APP_EMPLOYEES_ID, l.MODULE_APPROVAL_ID, \
l.EMPLOYEES_ID, l.START_DATE, l.END_DATE, l.APPROVAL_ROLE_ID, \
CONCAT(em.FIRST_NAME, ' ', em.LAST_NAME, ' (', em.EMPLOYEE_NUMBER, ')') AS employee_name \
FROM LT_MAST_MODULE_APP_EMP l \
LEFT JOIN lt_mast_employees em ON em.EMPLOYEE_ID = l.EMPLOYEES_ID \
WHERE l.MODULE_APPROVAL_ID = ? 

#getEmployeesBymoduleEmpId = SELECT l.MODULE_APP_EMPLOYEES_ID,l.MODULE_APPROVAL_ID, \
#l.EMPLOYEES_ID,l.START_DATE,l.END_DATE,l.APPROVAL_ROLE_ID , \
#( cmv.VALUE_NAME||' '|| em.FIRST_NAME|| ' '||em.LAST_NAME||' '||'('|| em.EMPLOYEE_NUMBER|| ')' ) as employee_name \
#FROM LT_MAST_MODULE_APP_EMP l ,lt_mast_employees em,LT_MAST_COMN_MASTER_VALUES cmv  \
#WHERE l.MODULE_APP_EMPLOYEES_ID = ?  \
#and em.EMPLOYEE_ID(+) = l.EMPLOYEES_ID  \
#and em.TITLE = cmv.value_code(+)

getEmployeesBymoduleEmpId = SELECT l.MODULE_APP_EMPLOYEES_ID, l.MODULE_APPROVAL_ID, \
l.EMPLOYEES_ID, l.START_DATE, l.END_DATE, l.APPROVAL_ROLE_ID, \
CONCAT(em.FIRST_NAME, ' ', em.LAST_NAME, ' (', em.EMPLOYEE_NUMBER, ')') AS employee_name \
FROM LT_MAST_MODULE_APP_EMP l \
LEFT JOIN lt_mast_employees em ON em.EMPLOYEE_ID = l.EMPLOYEES_ID \
WHERE l.MODULE_APP_EMPLOYEES_ID = ?


checkForDuplicateLtExpModuleApprovals = SELECT * FROM  LT_MAST_MODULE_APPROVALS b \
WHERE b.MODULE = ? AND b.APPROVAL_LEVEL=? \
AND UPPER(b.APPROVAL_ROLE_CODE)=? AND b.DIVISION_ID=? AND b.STATUS = ?

deleteEmployee = DELETE FROM LT_MAST_MODULE_APP_EMP WHERE MODULE_APP_EMPLOYEES_ID = ? \
AND MODULE_APPROVAL_ID = ?

checkForDuplicateEmployee = SELECT * FROM LT_MAST_MODULE_APP_EMP WHERE MODULE_APPROVAL_ID = ? AND EMPLOYEES_ID = ?